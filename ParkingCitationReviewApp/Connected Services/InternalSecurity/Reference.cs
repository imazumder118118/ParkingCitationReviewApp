//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InternalSecurity
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DepartmentInfo", Namespace="http://ci.richmond.va.us/services")]
    public partial class DepartmentInfo : object
    {
        
        private int IdField;
        
        private string NameField;
        
        private int NumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Number
        {
            get
            {
                return this.NumberField;
            }
            set
            {
                this.NumberField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserInformation", Namespace="http://ci.richmond.va.us/services")]
    public partial class UserInformation : object
    {
        
        private int BureauIdField;
        
        private string BureauNameField;
        
        private int DepartmentIdField;
        
        private string DepartmentNameField;
        
        private string DistinguishedNameField;
        
        private int DivisionIdField;
        
        private string DivisionNameField;
        
        private string EmailAddressField;
        
        private string FirstNameField;
        
        private string LastNameField;
        
        private string MiddleNameField;
        
        private int NoneyaIdField;
        
        private string StatusField;
        
        private string SuffixField;
        
        private string TelephoneNumberField;
        
        private string[] WindowsLogonField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BureauId
        {
            get
            {
                return this.BureauIdField;
            }
            set
            {
                this.BureauIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BureauName
        {
            get
            {
                return this.BureauNameField;
            }
            set
            {
                this.BureauNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DepartmentId
        {
            get
            {
                return this.DepartmentIdField;
            }
            set
            {
                this.DepartmentIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepartmentName
        {
            get
            {
                return this.DepartmentNameField;
            }
            set
            {
                this.DepartmentNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DistinguishedName
        {
            get
            {
                return this.DistinguishedNameField;
            }
            set
            {
                this.DistinguishedNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DivisionId
        {
            get
            {
                return this.DivisionIdField;
            }
            set
            {
                this.DivisionIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DivisionName
        {
            get
            {
                return this.DivisionNameField;
            }
            set
            {
                this.DivisionNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailAddress
        {
            get
            {
                return this.EmailAddressField;
            }
            set
            {
                this.EmailAddressField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName
        {
            get
            {
                return this.FirstNameField;
            }
            set
            {
                this.FirstNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName
        {
            get
            {
                return this.LastNameField;
            }
            set
            {
                this.LastNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiddleName
        {
            get
            {
                return this.MiddleNameField;
            }
            set
            {
                this.MiddleNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NoneyaId
        {
            get
            {
                return this.NoneyaIdField;
            }
            set
            {
                this.NoneyaIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status
        {
            get
            {
                return this.StatusField;
            }
            set
            {
                this.StatusField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Suffix
        {
            get
            {
                return this.SuffixField;
            }
            set
            {
                this.SuffixField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TelephoneNumber
        {
            get
            {
                return this.TelephoneNumberField;
            }
            set
            {
                this.TelephoneNumberField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] WindowsLogon
        {
            get
            {
                return this.WindowsLogonField;
            }
            set
            {
                this.WindowsLogonField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserDepartmentName", Namespace="http://ci.richmond.va.us/services")]
    public partial class UserDepartmentName : object
    {
        
        private string DepartmentNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepartmentName
        {
            get
            {
                return this.DepartmentNameField;
            }
            set
            {
                this.DepartmentNameField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://ci.richmond.va.us/services", ConfigurationName="InternalSecurity.INoneyaWebService")]
    public interface INoneyaWebService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ci.richmond.va.us/services/INoneyaWebService/GetApplicationHostName", ReplyAction="http://ci.richmond.va.us/services/INoneyaWebService/GetApplicationHostNameRespons" +
            "e")]
        System.Threading.Tasks.Task<string> GetApplicationHostNameAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ci.richmond.va.us/services/INoneyaWebService/GetRichvaUsersInAppRole", ReplyAction="http://ci.richmond.va.us/services/INoneyaWebService/GetRichvaUsersInAppRoleRespon" +
            "se")]
        System.Threading.Tasks.Task<string[]> GetRichvaUsersInAppRoleAsync(string appId, string role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ci.richmond.va.us/services/INoneyaWebService/GetRichvaUsersInAppRoleDepart" +
            "ment", ReplyAction="http://ci.richmond.va.us/services/INoneyaWebService/GetRichvaUsersInAppRoleDepart" +
            "mentResponse")]
        System.Threading.Tasks.Task<string[]> GetRichvaUsersInAppRoleDepartmentAsync(string appId, string role, string department);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ci.richmond.va.us/services/INoneyaWebService/GetUsersInRole", ReplyAction="http://ci.richmond.va.us/services/INoneyaWebService/GetUsersInRoleResponse")]
        System.Threading.Tasks.Task<string[]> GetUsersInRoleAsync(string appId, string role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ci.richmond.va.us/services/INoneyaWebService/IsAuthorized", ReplyAction="http://ci.richmond.va.us/services/INoneyaWebService/IsAuthorizedResponse")]
        System.Threading.Tasks.Task<bool> IsAuthorizedAsync(string appId, string userLogonName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ci.richmond.va.us/services/INoneyaWebService/IsInRole", ReplyAction="http://ci.richmond.va.us/services/INoneyaWebService/IsInRoleResponse")]
        System.Threading.Tasks.Task<bool> IsInRoleAsync(string appId, string role, string userLogonName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ci.richmond.va.us/services/INoneyaWebService/GetApplicationRoles", ReplyAction="http://ci.richmond.va.us/services/INoneyaWebService/GetApplicationRolesResponse")]
        System.Threading.Tasks.Task<string[]> GetApplicationRolesAsync(string appId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ci.richmond.va.us/services/INoneyaWebService/GetUserRoles", ReplyAction="http://ci.richmond.va.us/services/INoneyaWebService/GetUserRolesResponse")]
        System.Threading.Tasks.Task<string[]> GetUserRolesAsync(string appId, string userLogonName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ci.richmond.va.us/services/INoneyaWebService/GetDepartments", ReplyAction="http://ci.richmond.va.us/services/INoneyaWebService/GetDepartmentsResponse")]
        System.Threading.Tasks.Task<string[]> GetDepartmentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ci.richmond.va.us/services/INoneyaWebService/GetDepartmentsInfo", ReplyAction="http://ci.richmond.va.us/services/INoneyaWebService/GetDepartmentsInfoResponse")]
        System.Threading.Tasks.Task<InternalSecurity.DepartmentInfo[]> GetDepartmentsInfoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ci.richmond.va.us/services/INoneyaWebService/GetUserInformation", ReplyAction="http://ci.richmond.va.us/services/INoneyaWebService/GetUserInformationResponse")]
        System.Threading.Tasks.Task<InternalSecurity.UserInformation> GetUserInformationAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ci.richmond.va.us/services/INoneyaWebService/GetUserInformationFromId", ReplyAction="http://ci.richmond.va.us/services/INoneyaWebService/GetUserInformationFromIdRespo" +
            "nse")]
        System.Threading.Tasks.Task<InternalSecurity.UserInformation> GetUserInformationFromIdAsync(int noneyaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ci.richmond.va.us/services/INoneyaWebService/GetUsersDepartmentName", ReplyAction="http://ci.richmond.va.us/services/INoneyaWebService/GetUsersDepartmentNameRespons" +
            "e")]
        System.Threading.Tasks.Task<InternalSecurity.UserDepartmentName> GetUsersDepartmentNameAsync(string userName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface INoneyaWebServiceChannel : InternalSecurity.INoneyaWebService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class NoneyaWebServiceClient : System.ServiceModel.ClientBase<InternalSecurity.INoneyaWebService>, InternalSecurity.INoneyaWebService
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public NoneyaWebServiceClient() : 
                base(NoneyaWebServiceClient.GetDefaultBinding(), NoneyaWebServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.NoneyaEndpointAddressToServer.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public NoneyaWebServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(NoneyaWebServiceClient.GetBindingForEndpoint(endpointConfiguration), NoneyaWebServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public NoneyaWebServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(NoneyaWebServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public NoneyaWebServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(NoneyaWebServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public NoneyaWebServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<string> GetApplicationHostNameAsync()
        {
            return base.Channel.GetApplicationHostNameAsync();
        }
        
        public System.Threading.Tasks.Task<string[]> GetRichvaUsersInAppRoleAsync(string appId, string role)
        {
            return base.Channel.GetRichvaUsersInAppRoleAsync(appId, role);
        }
        
        public System.Threading.Tasks.Task<string[]> GetRichvaUsersInAppRoleDepartmentAsync(string appId, string role, string department)
        {
            return base.Channel.GetRichvaUsersInAppRoleDepartmentAsync(appId, role, department);
        }
        
        public System.Threading.Tasks.Task<string[]> GetUsersInRoleAsync(string appId, string role)
        {
            return base.Channel.GetUsersInRoleAsync(appId, role);
        }
        
        public System.Threading.Tasks.Task<bool> IsAuthorizedAsync(string appId, string userLogonName)
        {
            return base.Channel.IsAuthorizedAsync(appId, userLogonName);
        }
        
        public System.Threading.Tasks.Task<bool> IsInRoleAsync(string appId, string role, string userLogonName)
        {
            return base.Channel.IsInRoleAsync(appId, role, userLogonName);
        }
        
        public System.Threading.Tasks.Task<string[]> GetApplicationRolesAsync(string appId)
        {
            return base.Channel.GetApplicationRolesAsync(appId);
        }
        
        public System.Threading.Tasks.Task<string[]> GetUserRolesAsync(string appId, string userLogonName)
        {
            return base.Channel.GetUserRolesAsync(appId, userLogonName);
        }
        
        public System.Threading.Tasks.Task<string[]> GetDepartmentsAsync()
        {
            return base.Channel.GetDepartmentsAsync();
        }
        
        public System.Threading.Tasks.Task<InternalSecurity.DepartmentInfo[]> GetDepartmentsInfoAsync()
        {
            return base.Channel.GetDepartmentsInfoAsync();
        }
        
        public System.Threading.Tasks.Task<InternalSecurity.UserInformation> GetUserInformationAsync(string userName)
        {
            return base.Channel.GetUserInformationAsync(userName);
        }
        
        public System.Threading.Tasks.Task<InternalSecurity.UserInformation> GetUserInformationFromIdAsync(int noneyaId)
        {
            return base.Channel.GetUserInformationFromIdAsync(noneyaId);
        }
        
        public System.Threading.Tasks.Task<InternalSecurity.UserDepartmentName> GetUsersDepartmentNameAsync(string userName)
        {
            return base.Channel.GetUsersDepartmentNameAsync(userName);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.NoneyaEndpointAddressToServer))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.NoneyaEndpointAddressToServer))
            {
                return new System.ServiceModel.EndpointAddress("http://starappstage2.richva.ci.richmond.va.us/services/noneya/NoneyaWebService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return NoneyaWebServiceClient.GetBindingForEndpoint(EndpointConfiguration.NoneyaEndpointAddressToServer);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return NoneyaWebServiceClient.GetEndpointAddress(EndpointConfiguration.NoneyaEndpointAddressToServer);
        }
        
        public enum EndpointConfiguration
        {
            
            NoneyaEndpointAddressToServer,
        }
    }
}
